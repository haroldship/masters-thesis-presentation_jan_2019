data[1:5,nfcolnames]
data[,nfcolnames]
data[,nfcolnames,with=T]
data[,nfcolnames,with=F]
data[1:5,nfcolnames,with=F]
data[1:5,-nfcolnames,with=F]
nfcolnames <- list(JWAP, JWDP, JWMNP, WAGP, WKHP, VALP)
"
"
nfcolnames <- list("JWAP", "JWDP", "JWMNP", "WAGP", "WKHP", "VALP")
data[1:5,nfcolnames,with=F]
nfcolnames <- c("JWAP", "JWDP", "JWMNP", "WAGP", "WKHP", "VALP")
data[1:5,nfcolnames,with=F]
data[!nfcolnames]
data[nfcolnames]
data[1]
data[,1]
data[,1,with=F]
data[,!nfcolnames,with=F]
data2 <- as.data.table(cbind(data[,nfcolnames,with=F], lapply(data[,!nfcolnames,with=F], factor))
data2 <- as.data.table(cbind(data[,nfcolnames,with=F], lapply(data[,!nfcolnames,with=F], factor)))
```
lapply(data[,!nfcolnames,with=F], factor)
str(lapply(data[,!nfcolnames,with=F], factor))
data2 <- cbind(data[,nfcolnames,with=F], lapply(data[,!nfcolnames,with=F], factor) )
?data.table
nfcolnames <- list("AGEP", "JWAP", "JWDP", "JWMNP", "WAGP", "WKHP", "VALP")
View(data)
library(data.table)
data <- fread("~/Downloads/american_community_survey_25vars_penn.asc")
nfcolnames <- list("AGEP", "JWAP", "JWDP", "JWMNP", "WAGP", "WKHP", "VALP")
data2 <- data[,nfcolnames]
data3 <- lapply(data[,!nfcolnames,with=F], factor)
data3 <- lapply(data[,!nfcolnames], factor)
nfcolnames <- c("AGEP", "JWAP", "JWDP", "JWMNP", "WAGP", "WKHP", "VALP")
data2 <- data[,nfcolnames]
nfcolnames <- list("AGEP", "JWAP", "JWDP", "JWMNP", "WAGP", "WKHP", "VALP")
data2 <- data[,nfcolnames]
DT = data.table(x=rep(c("a","b","c"),each=3), y=c(1,3,6), v=1:9)
names(DT)
DT[,v]
DT[,list(v)]
nfcolnames <- list(AGEP, JWAP, JWDP, "JWMNP", "WAGP", "WKHP", "VALP")
data2 <- data[,list(AGEP, JWAP)]
data <- cbind(data2, data3)
data3 <- lapply(data[,!list(AGEP, JWAP, JWDP, JWMNP, WAGP, WKHP, VALP)], factor)
data[,!list(AGEP, JWAP, JWDP, JWMNP, WAGP, WKHP, VALP)]
data[,list(AGEP, JWAP, JWDP, JWMNP, WAGP, WKHP, VALP)]
data[,!list(AGEP, JWAP, JWDP, JWMNP, WAGP, WKHP, VALP)]
data[,-list(AGEP, JWAP, JWDP, JWMNP, WAGP, WKHP, VALP)]
data3 <- lapply(data[,!as.vector(list(AGEP, JWAP, JWDP, JWMNP, WAGP, WKHP, VALP))], factor)
data3 <- lapply(data[,!c("AGEP", "JWAP", "JWDP", "JWMNP", "WAGP", "WKHP", "VALP"))], factor)
data3 <- lapply(data[,!c("AGEP", "JWAP", "JWDP", "JWMNP", "WAGP", "WKHP", "VALP")], factor)
data3 <- lapply(data[,!c("AGEP", "JWAP", "JWDP", "JWMNP", "WAGP", "WKHP", "VALP"), with=F], factor)
dim(data3)
class(data3)
data[,!c("AGEP", "JWAP", "JWDP", "JWMNP", "WAGP", "WKHP", "VALP"), with=F]
lapply(data[,!c("AGEP", "JWAP", "JWDP", "JWMNP", "WAGP", "WKHP", "VALP"), with=F], factor)
library(data.table)
data <- fread("~/Downloads/american_community_survey_25vars_penn.asc")
data2 <- data[,list(AGEP, JWAP, JWDP, JWMNP, WAGP, WKHP, VALP)]
data3 <- lapply(data[,!c("AGEP", "JWAP", "JWDP", "JWMNP", "WAGP", "WKHP", "VALP"), with=F], factor)
data <- cbind(data2, data3)
class(data3)
update.packages()
?update.packages
update.packages(ask=F)
install.packages('devtools')
?invisible
library(segue)
??daisy
?cluster::daisy
??weights
weights(Cars)
data(Cars)
data(cars)
weights(cars)
?weights
summary(cars)
X <- factor(sample(1:2, 100))
X <- factor(sample(1:2, 100), replace=TRUE)
X <- factor(sample(1:2, 100, replace=TRUE))
X
weights(X)
ddd <- data.frame(X)
weights(ddd)
names(cars)
data(cars)
fit <- lm(speed ~ dist - 1, data=cars)
plot(dist, speed, type='p', main=expression(paste("y=",coef(fit)[1],"x")))
plot(cars$dist, cars$speed, type='p', main=expression(paste("y=",coef(fit)[1],"x")))
slope <- coef(fit)[1]
plot(cars$dist, cars$speed, type='p', main=expression(paste("y=",slope,"x")))
abline(slope, 0, col="red")
abline(0, slope, col="red")
plot(cars$dist, cars$speed, type='p', main=paste("y=",slope,"x"), ylim(0,25))
plot(cars$dist, cars$speed, type='p', main=paste("y=",slope,"x"), ylim=c(0,25))
(log(1000) - log(160))/log(1.5)
(log(1000) - log(160))/log(1.5.4)
(log(1000) - log(160))/log(1.5.4)
(log(1000) - log(160))/log(1.54)
library(rpud)
library(rpud)
class(2.0)
sigma
decay
kO
library(ggplot2)
setwd("/Users/harold/Dropbox/MA_Knowledge_and_Info/Thesis/thesis/results/by_num_cases_multi")
Decays <- c("0.7", "1", "1.4", "2.0")
M <- length(Decays)
decay <- numeric()
alphaO <- numeric()
alphaS <- numeric()
alphaC <- numeric()
kO <- numeric()
kS <- numeric()
kC <- numeric()
for (j in 1:M) {
Cases <- c(50, 100, 200, 500, 1000)
Decay <- Decays[j]
Dirs <- sapply(Cases, function(case) paste('../unif_', case, '_', Decay, '_1h/output/', sep=''))
Files <- sapply(Dirs, function(dir) paste(dir, 'mean_table.tex', sep=''))
N <- length(Cases)
Errs <- character()
matO <- NULL
matS <- NULL
matC <- NULL
for (i in 1:N) {
Case <- Cases[i]
File <- Files[i]
lines <- readLines(File)
lines <- lines[7:19]
Os <- numeric()
Ss <- numeric()
Cs <- numeric()
for (line in lines) {
fline <- gsub("\\", "", line, fixed=TRUE)
partsl <- strsplit(fline, "&", fixed=TRUE)
parts <- partsl[[1]]
key <- trimws(parts[1], which="both")
O <- as.numeric(parts[2])
S <- as.numeric(parts[3])
C <- as.numeric(parts[4])
if (! key %in% Errs) {
Errs <- c(Errs, key)
}
Os <- c(Os, O)
Ss <- c(Ss, S)
Cs <- c(Cs, C)
}
M <- length(Os)
if (is.null(matO)) matO <- matrix(0, nrow=N, ncol=M, dimnames=list(NULL, Errs))
if (is.null(matS)) matS <- matrix(0, nrow=N, ncol=M, dimnames=list(NULL, Errs))
if (is.null(matC)) matC <- matrix(0, nrow=N, ncol=M, dimnames=list(NULL, Errs))
matO[i,] <- Os
matS[i,] <- Ss
matC[i,] <- Cs
}
dfO <- as.data.frame(matO)
dfO$Case <- Cases
dfO$Bandwidth <- "Oracle"
dfS <- as.data.frame(matS)
dfS$Case <- Cases
dfS$Bandwidth <- "Silverman"
dfC <- as.data.frame(matC)
dfC$Case <- Cases
dfC$Bandwidth <- "CV"
df <- rbind(dfO, dfS, dfC)
df$Bandwidth <- as.factor(df$Bandwidth)
coefO <- coef(lm(log(dfO$`Relative MISE`) ~ log(dfO$Case)))
coefS <- coef(lm(log(dfS$`Relative MISE`) ~ log(dfS$Case)))
coefC <- coef(lm(log(dfC$`Relative MISE`) ~ log(dfC$Case)))
decay <- c(decay, as.numeric(Decay))
kO <- c(kO, coefO[1])
alphaO <- c(alphaO, coefO[2])
kS <- c(kS, coefS[1])
alphaS <- c(alphaS, coefS[2])
kC <- c(kC, coefC[1])
alphaC <- c(alphaC, coefC[2])
# pdf(file="MISE-vs-cases.pdf")
# ggplot(df) +
#   geom_point(aes(x=Case, y=MISE, colour=Bandwidth, shape=Bandwidth), size=3)
# dev.off()
# pdf(file="RMISE-vs-cases.pdf")
# ggplot(df) +
#   geom_point(aes(x=Case, y=`Relative MISE`, colour=Bandwidth, shape=Bandwidth), size=3) +
#   stat_function(fun=function(x) {exp(coefO[1])*x**(coefO[2])}, aes(colour="Oracle"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefS[1])*x**(coefS[2])}, aes(colour="Silverman"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefC[1])*x**(coefC[2])}, aes(colour="CV"), xlim=c(45,1100))
# dev.off()
# pdf(file="RMISE-vs-cases-log-log.pdf")
# ggplot(df) +
#   geom_point(aes(x=Case, y=`Relative MISE`, colour=Bandwidth, shape=Bandwidth), size=3) +
#   stat_function(fun=function(x) {exp(coefO[1])*x**(coefO[2])}, aes(colour="Oracle"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefS[1])*x**(coefS[2])}, aes(colour="Silverman"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefC[1])*x**(coefC[2])}, aes(colour="CV"), xlim=c(45,1100)) +
#   coord_trans(x='log10', y='log10') +
#   annotation_logticks(scaled=FALSE)
# dev.off()
}
df <- data.frame(decay, kO, alphaO, kS, alphaS, kC, alphaC)
df
library(ggplot2)
setwd("/Users/harold/Dropbox/MA_Knowledge_and_Info/Thesis/thesis/results/by_num_cases_multi")
Decays <- c("0.7", "1", "1.4", "2.0", "unif")
M <- length(Decays)
decay <- numeric()
alphaO <- numeric()
alphaS <- numeric()
alphaC <- numeric()
kO <- numeric()
kS <- numeric()
kC <- numeric()
for (j in 1:M) {
Cases <- c(50, 100, 200, 500, 1000)
Decay <- Decays[j]
Dirs <- sapply(Cases, function(case) paste('../unif_', case, '_', Decay, '_1h/output/', sep=''))
Files <- sapply(Dirs, function(dir) paste(dir, 'mean_table.tex', sep=''))
N <- length(Cases)
Errs <- character()
matO <- NULL
matS <- NULL
matC <- NULL
for (i in 1:N) {
Case <- Cases[i]
File <- Files[i]
lines <- readLines(File)
lines <- lines[7:19]
Os <- numeric()
Ss <- numeric()
Cs <- numeric()
for (line in lines) {
fline <- gsub("\\", "", line, fixed=TRUE)
partsl <- strsplit(fline, "&", fixed=TRUE)
parts <- partsl[[1]]
key <- trimws(parts[1], which="both")
O <- as.numeric(parts[2])
S <- as.numeric(parts[3])
C <- as.numeric(parts[4])
if (! key %in% Errs) {
Errs <- c(Errs, key)
}
Os <- c(Os, O)
Ss <- c(Ss, S)
Cs <- c(Cs, C)
}
M <- length(Os)
if (is.null(matO)) matO <- matrix(0, nrow=N, ncol=M, dimnames=list(NULL, Errs))
if (is.null(matS)) matS <- matrix(0, nrow=N, ncol=M, dimnames=list(NULL, Errs))
if (is.null(matC)) matC <- matrix(0, nrow=N, ncol=M, dimnames=list(NULL, Errs))
matO[i,] <- Os
matS[i,] <- Ss
matC[i,] <- Cs
}
dfO <- as.data.frame(matO)
dfO$Case <- Cases
dfO$Bandwidth <- "Oracle"
dfS <- as.data.frame(matS)
dfS$Case <- Cases
dfS$Bandwidth <- "Silverman"
dfC <- as.data.frame(matC)
dfC$Case <- Cases
dfC$Bandwidth <- "CV"
df <- rbind(dfO, dfS, dfC)
df$Bandwidth <- as.factor(df$Bandwidth)
coefO <- coef(lm(log(dfO$`Relative MISE`) ~ log(dfO$Case)))
coefS <- coef(lm(log(dfS$`Relative MISE`) ~ log(dfS$Case)))
coefC <- coef(lm(log(dfC$`Relative MISE`) ~ log(dfC$Case)))
decay <- c(decay, as.numeric(Decay))
kO <- c(kO, coefO[1])
alphaO <- c(alphaO, coefO[2])
kS <- c(kS, coefS[1])
alphaS <- c(alphaS, coefS[2])
kC <- c(kC, coefC[1])
alphaC <- c(alphaC, coefC[2])
# pdf(file="MISE-vs-cases.pdf")
# ggplot(df) +
#   geom_point(aes(x=Case, y=MISE, colour=Bandwidth, shape=Bandwidth), size=3)
# dev.off()
# pdf(file="RMISE-vs-cases.pdf")
# ggplot(df) +
#   geom_point(aes(x=Case, y=`Relative MISE`, colour=Bandwidth, shape=Bandwidth), size=3) +
#   stat_function(fun=function(x) {exp(coefO[1])*x**(coefO[2])}, aes(colour="Oracle"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefS[1])*x**(coefS[2])}, aes(colour="Silverman"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefC[1])*x**(coefC[2])}, aes(colour="CV"), xlim=c(45,1100))
# dev.off()
# pdf(file="RMISE-vs-cases-log-log.pdf")
# ggplot(df) +
#   geom_point(aes(x=Case, y=`Relative MISE`, colour=Bandwidth, shape=Bandwidth), size=3) +
#   stat_function(fun=function(x) {exp(coefO[1])*x**(coefO[2])}, aes(colour="Oracle"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefS[1])*x**(coefS[2])}, aes(colour="Silverman"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefC[1])*x**(coefC[2])}, aes(colour="CV"), xlim=c(45,1100)) +
#   coord_trans(x='log10', y='log10') +
#   annotation_logticks(scaled=FALSE)
# dev.off()
}
df <- data.frame(decay, kO, alphaO, kS, alphaS, kC, alphaC)
library(ggplot2)
setwd("/Users/harold/Dropbox/MA_Knowledge_and_Info/Thesis/thesis/results/by_num_cases_multi")
Decays <- c("0.7", "1", "1.4", "2.0", "unif")
M <- length(Decays)
decay <- numeric()
alphaO <- numeric()
alphaS <- numeric()
alphaC <- numeric()
kO <- numeric()
kS <- numeric()
kC <- numeric()
for (j in 1:M) {
Cases <- c(50, 100, 200, 500, 1000)
Decay <- Decays[j]
Dirs <- sapply(Cases, function(case) paste('../unif_', case, '_', Decay, '_1h/output/', sep=''))
Files <- sapply(Dirs, function(dir) paste(dir, 'mean_table.tex', sep=''))
N <- length(Cases)
Errs <- character()
matO <- NULL
matS <- NULL
matC <- NULL
for (i in 1:N) {
Case <- Cases[i]
File <- Files[i]
lines <- readLines(File)
lines <- lines[7:19]
Os <- numeric()
Ss <- numeric()
Cs <- numeric()
for (line in lines) {
fline <- gsub("\\", "", line, fixed=TRUE)
partsl <- strsplit(fline, "&", fixed=TRUE)
parts <- partsl[[1]]
key <- trimws(parts[1], which="both")
O <- as.numeric(parts[2])
S <- as.numeric(parts[3])
C <- as.numeric(parts[4])
if (! key %in% Errs) {
Errs <- c(Errs, key)
}
Os <- c(Os, O)
Ss <- c(Ss, S)
Cs <- c(Cs, C)
}
M <- length(Os)
if (is.null(matO)) matO <- matrix(0, nrow=N, ncol=M, dimnames=list(NULL, Errs))
if (is.null(matS)) matS <- matrix(0, nrow=N, ncol=M, dimnames=list(NULL, Errs))
if (is.null(matC)) matC <- matrix(0, nrow=N, ncol=M, dimnames=list(NULL, Errs))
matO[i,] <- Os
matS[i,] <- Ss
matC[i,] <- Cs
}
dfO <- as.data.frame(matO)
dfO$Case <- Cases
dfO$Bandwidth <- "Oracle"
dfS <- as.data.frame(matS)
dfS$Case <- Cases
dfS$Bandwidth <- "Silverman"
dfC <- as.data.frame(matC)
dfC$Case <- Cases
dfC$Bandwidth <- "CV"
df <- rbind(dfO, dfS, dfC)
df$Bandwidth <- as.factor(df$Bandwidth)
coefO <- coef(lm(log(dfO$`Relative MISE`) ~ log(dfO$Case)))
coefS <- coef(lm(log(dfS$`Relative MISE`) ~ log(dfS$Case)))
coefC <- coef(lm(log(dfC$`Relative MISE`) ~ log(dfC$Case)))
decay <- c(decay, as.numeric(Decay))
kO <- c(kO, coefO[1])
alphaO <- c(alphaO, coefO[2])
kS <- c(kS, coefS[1])
alphaS <- c(alphaS, coefS[2])
kC <- c(kC, coefC[1])
alphaC <- c(alphaC, coefC[2])
# pdf(file="MISE-vs-cases.pdf")
# ggplot(df) +
#   geom_point(aes(x=Case, y=MISE, colour=Bandwidth, shape=Bandwidth), size=3)
# dev.off()
# pdf(file="RMISE-vs-cases.pdf")
# ggplot(df) +
#   geom_point(aes(x=Case, y=`Relative MISE`, colour=Bandwidth, shape=Bandwidth), size=3) +
#   stat_function(fun=function(x) {exp(coefO[1])*x**(coefO[2])}, aes(colour="Oracle"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefS[1])*x**(coefS[2])}, aes(colour="Silverman"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefC[1])*x**(coefC[2])}, aes(colour="CV"), xlim=c(45,1100))
# dev.off()
# pdf(file="RMISE-vs-cases-log-log.pdf")
# ggplot(df) +
#   geom_point(aes(x=Case, y=`Relative MISE`, colour=Bandwidth, shape=Bandwidth), size=3) +
#   stat_function(fun=function(x) {exp(coefO[1])*x**(coefO[2])}, aes(colour="Oracle"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefS[1])*x**(coefS[2])}, aes(colour="Silverman"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefC[1])*x**(coefC[2])}, aes(colour="CV"), xlim=c(45,1100)) +
#   coord_trans(x='log10', y='log10') +
#   annotation_logticks(scaled=FALSE)
# dev.off()
}
df <- data.frame(decay, kO, alphaO, kS, alphaS, kC, alphaC)
df
?as.numeric
is.infinite()
?is.infinite
Inf
is.infinite(Inf)
is.finite(NA)
is.finite(2)
is.finite(Inf)
as.numeric("x")
X <- "unif"
X == "unif"
X == "u1nif"
library(ggplot2)
setwd("/Users/harold/Dropbox/MA_Knowledge_and_Info/Thesis/thesis/results/by_num_cases_multi")
Decays <- c("0.7", "1", "1.4", "2.0", "unif")
M <- length(Decays)
decay <- numeric()
alphaO <- numeric()
alphaS <- numeric()
alphaC <- numeric()
kO <- numeric()
kS <- numeric()
kC <- numeric()
for (j in 1:M) {
Cases <- c(50, 100, 200, 500, 1000)
Decay <- Decays[j]
Dirs <- sapply(Cases, function(case) paste('../unif_', case, '_', Decay, '_1h/output/', sep=''))
Files <- sapply(Dirs, function(dir) paste(dir, 'mean_table.tex', sep=''))
N <- length(Cases)
Errs <- character()
matO <- NULL
matS <- NULL
matC <- NULL
for (i in 1:N) {
Case <- Cases[i]
File <- Files[i]
lines <- readLines(File)
lines <- lines[7:19]
Os <- numeric()
Ss <- numeric()
Cs <- numeric()
for (line in lines) {
fline <- gsub("\\", "", line, fixed=TRUE)
partsl <- strsplit(fline, "&", fixed=TRUE)
parts <- partsl[[1]]
key <- trimws(parts[1], which="both")
O <- as.numeric(parts[2])
S <- as.numeric(parts[3])
C <- as.numeric(parts[4])
if (! key %in% Errs) {
Errs <- c(Errs, key)
}
Os <- c(Os, O)
Ss <- c(Ss, S)
Cs <- c(Cs, C)
}
M <- length(Os)
if (is.null(matO)) matO <- matrix(0, nrow=N, ncol=M, dimnames=list(NULL, Errs))
if (is.null(matS)) matS <- matrix(0, nrow=N, ncol=M, dimnames=list(NULL, Errs))
if (is.null(matC)) matC <- matrix(0, nrow=N, ncol=M, dimnames=list(NULL, Errs))
matO[i,] <- Os
matS[i,] <- Ss
matC[i,] <- Cs
}
dfO <- as.data.frame(matO)
dfO$Case <- Cases
dfO$Bandwidth <- "Oracle"
dfS <- as.data.frame(matS)
dfS$Case <- Cases
dfS$Bandwidth <- "Silverman"
dfC <- as.data.frame(matC)
dfC$Case <- Cases
dfC$Bandwidth <- "CV"
df <- rbind(dfO, dfS, dfC)
df$Bandwidth <- as.factor(df$Bandwidth)
coefO <- coef(lm(log(dfO$`Relative MISE`) ~ log(dfO$Case)))
coefS <- coef(lm(log(dfS$`Relative MISE`) ~ log(dfS$Case)))
coefC <- coef(lm(log(dfC$`Relative MISE`) ~ log(dfC$Case)))
if (Decay == "unif") decayN <- Inf else decayN <- as.numeric(Decay)
decay <- c(decay, decayN)
kO <- c(kO, coefO[1])
alphaO <- c(alphaO, coefO[2])
kS <- c(kS, coefS[1])
alphaS <- c(alphaS, coefS[2])
kC <- c(kC, coefC[1])
alphaC <- c(alphaC, coefC[2])
# pdf(file="MISE-vs-cases.pdf")
# ggplot(df) +
#   geom_point(aes(x=Case, y=MISE, colour=Bandwidth, shape=Bandwidth), size=3)
# dev.off()
# pdf(file="RMISE-vs-cases.pdf")
# ggplot(df) +
#   geom_point(aes(x=Case, y=`Relative MISE`, colour=Bandwidth, shape=Bandwidth), size=3) +
#   stat_function(fun=function(x) {exp(coefO[1])*x**(coefO[2])}, aes(colour="Oracle"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefS[1])*x**(coefS[2])}, aes(colour="Silverman"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefC[1])*x**(coefC[2])}, aes(colour="CV"), xlim=c(45,1100))
# dev.off()
# pdf(file="RMISE-vs-cases-log-log.pdf")
# ggplot(df) +
#   geom_point(aes(x=Case, y=`Relative MISE`, colour=Bandwidth, shape=Bandwidth), size=3) +
#   stat_function(fun=function(x) {exp(coefO[1])*x**(coefO[2])}, aes(colour="Oracle"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefS[1])*x**(coefS[2])}, aes(colour="Silverman"), xlim=c(45,1100)) +
#   stat_function(fun=function(x) {exp(coefC[1])*x**(coefC[2])}, aes(colour="CV"), xlim=c(45,1100)) +
#   coord_trans(x='log10', y='log10') +
#   annotation_logticks(scaled=FALSE)
# dev.off()
}
df <- data.frame(decay, kO, alphaO, kS, alphaS, kC, alphaC)
df
library(xtable)
?xtable
xt <- xtable(df)
print(xt)
df <- data.frame(decay, kO, alphaO, kS, alphaS, kC, alphaC)
xt <- xtable(df, digits=4, align="lrrrrrr")
print(xt, include.rownames=FALSE, floating=FALSE)
xt <- xtable(df, digits=4, align="llrrrrrr")
print(xt, include.rownames=FALSE, floating=FALSE)
